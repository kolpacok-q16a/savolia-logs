#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Error Logger Bot
–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤—É—é –æ—à–∏–±–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã
"""

import requests
import json
from datetime import datetime

def test_error_logging():
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—à–∏–±–∫–∏"""
    
    # URL API (–∏–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à deployed URL)
    api_url = 'http://localhost:3333/api/log-error'  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    # api_url = 'https://savolia-error-logger.onrender.com/api/log-error'  # –î–ª—è production
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏
    test_error = {
        'platform': 'savolia-web',
        'userPhone': '+998901234567',
        'userId': 'test_user_123',
        'errorType': 'Test Error',
        'errorMessage': '–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã Error Logger Bot',
        'stackTrace': '''TypeError: Cannot read property 'test' of undefined
    at testFunction (test.js:10:15)
    at HTMLButtonElement.<anonymous> (test.js:5:8)
    at HTMLButtonElement.dispatch (jquery.min.js:2:43064)''',
        'url': 'https://savolia.uz/test',
        'userAgent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
        'timestamp': datetime.now().isoformat(),
        'additionalData': {
            'testMode': True,
            'component': 'TestComponent',
            'action': 'buttonClick',
            'viewport': {
                'width': 1920,
                'height': 1080
            }
        }
    }
    
    try:
        print('üß™ –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—à–∏–±–∫–∏...')
        print(f'üì° URL: {api_url}')
        print(f'üì± –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_error["userPhone"]}')
        print(f'‚ùå –¢–∏–ø –æ—à–∏–±–∫–∏: {test_error["errorType"]}')
        
        response = requests.post(
            api_url,
            headers={'Content-Type': 'application/json'},
            json=test_error,
            timeout=10
        )
        
        if response.status_code == 200:
            result = response.json()
            print('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!')
            print(f'üì® –û—Ç–≤–µ—Ç: {result.get("message", "OK")}')
            print('\nüîî –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!')
            
        else:
            print(f'‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}')
            print(f'üìÑ –û—Ç–≤–µ—Ç: {response.text}')
            
    except requests.exceptions.RequestException as e:
        print(f'‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}')
        print('üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω (python error_logger_bot.py)')
        
    except Exception as e:
        print(f'‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}')

def test_health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint"""
    
    api_url = 'http://localhost:3333/health'  # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    # api_url = 'https://savolia-error-logger.onrender.com/health'  # –î–ª—è production
    
    try:
        print('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...')
        response = requests.get(api_url, timeout=5)
        
        if response.status_code == 200:
            result = response.json()
            print('‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!')
            print(f'üìä –°—Ç–∞—Ç—É—Å: {result.get("status")}')
            print(f'üïê –í—Ä–µ–º—è: {result.get("timestamp")}')
            print(f'üè∑Ô∏è –°–µ—Ä–≤–∏—Å: {result.get("service")}')
        else:
            print(f'‚ùå Health check failed: HTTP {response.status_code}')
            
    except Exception as e:
        print(f'‚ùå Health check error: {e}')

if __name__ == '__main__':
    print('üöÄ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Savolia Error Logger Bot\n')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    test_health_check()
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –æ—à–∏–±–∫–∏
    test_error_logging()
    
    print('\nüìã –ß—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏–∑–æ–π—Ç–∏:')
    print('1. ‚úÖ Health check –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å —Å—Ç–∞—Ç—É—Å OK')
    print('2. ‚úÖ API –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω—è—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –æ—à–∏–±–∫—É')
    print('3. üì± –í Telegram –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ—Å—Ç–æ–≤–æ–π –æ—à–∏–±–∫–æ–π')
    print('4. ü§ñ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É (ID: 7752180805)')
    print('\nüîß –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:')
    print('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω: python error_logger_bot.py')
    print('- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π')
    print('- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–µ—Ç–µ–≤–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ')